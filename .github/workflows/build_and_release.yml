name: build linux packages

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-linux-packages:
    #permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: prepare packages
        run: |
          mkdir -p .debpkg/usr/bin
          mkdir -p .rpmpkg/usr/bin
          cp source/rainfall.py .debpkg/usr/bin/rainfall
          cp source/rainfall.py .rpmpkg/usr/bin/rainfall
          chmod +x .debpkg/usr/bin/rainfall
          chmod +x .rpmpkg/usr/bin/rainfall

      - uses: jiro4989/build-deb-action@v3
        with:
          package: rainfall
          package_root: .debpkg
          maintainer: Kevin Bloch
          version: ${{ github.ref }} # refs/tags/v*.*.*
          arch: 'amd64'
          desc: 'Rainfall animation for CLI.'

      - uses: jiro4989/build-rpm-action@v2
        with:
          package: rainfall
          package_root: .rpmpkg
          maintainer: Kevin Bloch
          version: ${{ github.ref }}
          arch: 'x86_64'
          desc: 'Rainfall animation for CLI.'
          summary: 'Rainfall animation for CLI.'


      - uses: actions/upload-artifact@v3
        with:
          name: artifact-deb
          path: |
            ./*.deb

      - uses: actions/upload-artifact@v3
        with:
          name: artifact-rpm
          path: |
            ./*.rpm
            !./*-debuginfo-*.rpm



  create-release:
    runs-on: ubuntu-latest
    needs:
      - build-linux-packages
    steps:
      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
          
      - name: Write upload_url to file
        run: echo '${{ steps.create-release.outputs.upload_url }}' > upload_url.txt

      - uses: actions/upload-artifact@v3
        with:
          name: create-release
          path: upload_url.txt
          
  upload-linux-packages:
    runs-on: ubuntu-latest
    needs: create-release
    strategy:
      matrix:
        include:
          - pkg: deb
            asset_content_type: application/vnd.debian.binary-package
          - pkg: rpm
            asset_content_type: application/x-rpm
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact-${{ matrix.pkg }}

      - uses: actions/download-artifact@v3
        with:
          name: create-release

      - id: vars
          # echo "::set-output name=upload_url::$(cat upload_url.txt)"
          # echo "::set-output name=asset_name::$(ls *.${{ matrix.pkg }} | head -n 1)"
        run: |
          echo "upload_url=$(cat upload_url.txt)" >> $GITHUB_OUTPUT
          echo "asset_name=$(ls *.${{ matrix.pkg }} | head -n 1)" >> $GITHUB_OUTPUT

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.vars.outputs.upload_url }}
          asset_path: ${{ steps.vars.outputs.asset_name }}
          asset_name: ${{ steps.vars.outputs.asset_name }}
          asset_content_type: ${{ matrix.asset_content_type }}
